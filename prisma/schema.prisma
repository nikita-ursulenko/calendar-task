datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  role          String          @default("user") // "admin", "manager", "user"
  group         Group?          @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId       String?
  githubId      String?         @unique
  googleId      String?         @unique
  accounts      Account[]
  sessions      Session[]
  Authenticator Authenticator[]
  events        Event[] // –î–æ–±–∞–≤–∏–ª–∏ —Å–≤—è–∑—å —Å —Å–æ–±—ã—Ç–∏—è–º–∏

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Group {
  id        String   @id @default(cuid()) // üîπ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π `groupId`
  name      String // üîπ –ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ö–ª–∏–Ω–∏–∫–∞ ‚Ññ1")
  adminId   String // üîπ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–¥–º–∏–Ω–∞ (—Å–æ–∑–¥–∞—Ç–µ–ª—è –≥—Ä—É–ø–ø—ã)
  users     User[] // üîπ –°–≤—è–∑—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  hashedPassword    String? // üîê –î–æ–±–∞–≤–∏–º —ç—Ç–æ
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

model Authenticator {
  credentialID         String  @unique
  userId               String
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, credentialID])
}

// –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
model Event {
  id        String   @id @default(cuid())
  firstName String // –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞
  lastName  String // –§–∞–º–∏–ª–∏—è –∫–ª–∏–µ–Ω—Ç–∞
  procedure String // –ü—Ä–æ—Ü–µ–¥—É—Ä–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  startTime DateTime // –ù–∞—á–∞–ª–æ —Å–æ–±—ã—Ç–∏—è
  endTime   DateTime // –ö–æ–Ω–µ—Ü —Å–æ–±—ã—Ç–∏—è (—Å—á–∏—Ç–∞–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)
  duration  Int // –í—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö
  userId    String // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ—Ü–µ–¥—É—Ä—É
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
